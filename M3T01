{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "611d0d11",
   "metadata": {},
   "source": [
    "Exercici 1\n",
    "Crea una funció que donat un Array d’una dimensió, et faci un resum estadístic bàsic de les dades. Si detecta que l’array té més d’una dimensió, ha de mostrar un missatge d’error.\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "3ea26770",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "False"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import numpy as np\n",
    "def calcular(arr):\n",
    "    for i in arr :\n",
    "        if isinstance(i, list):\n",
    "            return True\n",
    "        else:\n",
    "            return False\n",
    "    return True\n",
    "a =np.array([1,2,3])\n",
    "b = np.array([4,5])\n",
    "\n",
    "#calcular(a)\n",
    "#calcular(b)\n",
    "calcular(b)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ac0ecf14",
   "metadata": {},
   "source": [
    "Exercici 2\n",
    "Crea una funció que et generi un quadrat NxN de nombres aleatoris entre el 0 i el 100."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "57fbe0f0",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/nf/k9lr66x533j8b29kjjrqj1xr0000gn/T/ipykernel_21456/1518901769.py:9: DeprecationWarning: `np.int` is a deprecated alias for the builtin `int`. To silence this warning, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.\n",
      "Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n",
      "  mat = np.matrix(i, dtype = np.int)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "matrix([[26]])"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import random \n",
    "\n",
    "\n",
    "def quadrat():\n",
    "    ran_list = random.randint(0,100)\n",
    "    \n",
    "    for i in range(ran_list):\n",
    "        mat = np.matrix(i, dtype = np.int)\n",
    "        i*=2\n",
    "        \n",
    "    return mat\n",
    "\n",
    "quadrat()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3dd4e8ee",
   "metadata": {},
   "source": [
    "Exercici 3\n",
    "Crea una funció que donada una taula de dues dimensions (NxM), et calculi els totals per fila i els totals per columna.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d36d3813",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "d1dd057a",
   "metadata": {},
   "source": [
    "Exercici 4\n",
    "Implementa manualment una funció que calculi el coeficient de correlació. Informa-te'n sobre els seus usos i interpretació."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
